//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CareManagement", "FK_Accounts_UserId_aspnet_Users_UserId", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Repository.EF.aspnet_Users), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.Account), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Account), "AuthorizationFollowUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.AuthorizationFollowUp), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_AuthorizationRequests_AccountId_Accounts_AccountId", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Account), "AuthorizationRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.AuthorizationRequest), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_Facilities_AccountId_Accounts_AccountId", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Account), "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.Facility), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_Insurer_AccountId_Accounts_AccountId", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Account), "Insurer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.Insurer), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_MedicalAppointments_AccountId_Accounts_AccountId", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Account), "MedicalAppointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.MedicalAppointment), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_Medications_AccountId_Accounts_AccountId", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Account), "Medication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.Medication), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_PrescriptionPickups_AccountId_Accounts_AccountId", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Account), "PrescriptionPickup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.PrescriptionPickup), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK__aspnet_Me__Appli__3B75D760", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.aspnet_Applications), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.aspnet_Applications), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.aspnet_Roles), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK__aspnet_Us__Appli__3E52440B", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.aspnet_Applications), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK__aspnet_Me__UserI__3C69FB99", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Repository.EF.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.AuthorizationRequest), "AuthorizationFollowUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.AuthorizationFollowUp), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.AuthorizationRequest), "AuthorizationNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.AuthorizationNote), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "Insurer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Insurer), "AuthorizationRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.AuthorizationRequest), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "DosageUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Repository.EF.DosageUnit), "Medication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.Medication), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_Providers_FacilityId_Facilities_FacilityId", "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Facility), "Provider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.Provider), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_MedicalAppointments_ProviderId_Providers_ProviderId", "Provider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Provider), "MedicalAppointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.MedicalAppointment), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "ScheduleUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Data.Repository.EF.ScheduleUnit), "MedicalAppointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.MedicalAppointment), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "FK_PrescriptionPickups_MedicationId", "Medication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Data.Repository.EF.Medication), "PrescriptionPickup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.PrescriptionPickup), true)]
[assembly: EdmRelationshipAttribute("CareManagement", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.aspnet_Roles), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Data.Repository.EF.aspnet_Users))]

#endregion

namespace Data.Repository.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CareManagementContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CareManagementContainer object using the connection string found in the 'CareManagementContainer' section of the application configuration file.
        /// </summary>
        public CareManagementContainer() : base("name=CareManagementContainer", "CareManagementContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CareManagementContainer object.
        /// </summary>
        public CareManagementContainer(string connectionString) : base(connectionString, "CareManagementContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CareManagementContainer object.
        /// </summary>
        public CareManagementContainer(EntityConnection connection) : base(connection, "CareManagementContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__RefactorLog> C__RefactorLog
        {
            get
            {
                if ((_C__RefactorLog == null))
                {
                    _C__RefactorLog = base.CreateObjectSet<C__RefactorLog>("C__RefactorLog");
                }
                return _C__RefactorLog;
            }
        }
        private ObjectSet<C__RefactorLog> _C__RefactorLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthorizationFollowUp> AuthorizationFollowUps
        {
            get
            {
                if ((_AuthorizationFollowUps == null))
                {
                    _AuthorizationFollowUps = base.CreateObjectSet<AuthorizationFollowUp>("AuthorizationFollowUps");
                }
                return _AuthorizationFollowUps;
            }
        }
        private ObjectSet<AuthorizationFollowUp> _AuthorizationFollowUps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthorizationNote> AuthorizationNotes
        {
            get
            {
                if ((_AuthorizationNotes == null))
                {
                    _AuthorizationNotes = base.CreateObjectSet<AuthorizationNote>("AuthorizationNotes");
                }
                return _AuthorizationNotes;
            }
        }
        private ObjectSet<AuthorizationNote> _AuthorizationNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthorizationRequest> AuthorizationRequests
        {
            get
            {
                if ((_AuthorizationRequests == null))
                {
                    _AuthorizationRequests = base.CreateObjectSet<AuthorizationRequest>("AuthorizationRequests");
                }
                return _AuthorizationRequests;
            }
        }
        private ObjectSet<AuthorizationRequest> _AuthorizationRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DosageUnit> DosageUnits
        {
            get
            {
                if ((_DosageUnits == null))
                {
                    _DosageUnits = base.CreateObjectSet<DosageUnit>("DosageUnits");
                }
                return _DosageUnits;
            }
        }
        private ObjectSet<DosageUnit> _DosageUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Facility> Facilities
        {
            get
            {
                if ((_Facilities == null))
                {
                    _Facilities = base.CreateObjectSet<Facility>("Facilities");
                }
                return _Facilities;
            }
        }
        private ObjectSet<Facility> _Facilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Insurer> Insurers
        {
            get
            {
                if ((_Insurers == null))
                {
                    _Insurers = base.CreateObjectSet<Insurer>("Insurers");
                }
                return _Insurers;
            }
        }
        private ObjectSet<Insurer> _Insurers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalAppointment> MedicalAppointments
        {
            get
            {
                if ((_MedicalAppointments == null))
                {
                    _MedicalAppointments = base.CreateObjectSet<MedicalAppointment>("MedicalAppointments");
                }
                return _MedicalAppointments;
            }
        }
        private ObjectSet<MedicalAppointment> _MedicalAppointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medication> Medications
        {
            get
            {
                if ((_Medications == null))
                {
                    _Medications = base.CreateObjectSet<Medication>("Medications");
                }
                return _Medications;
            }
        }
        private ObjectSet<Medication> _Medications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrescriptionPickup> PrescriptionPickups
        {
            get
            {
                if ((_PrescriptionPickups == null))
                {
                    _PrescriptionPickups = base.CreateObjectSet<PrescriptionPickup>("PrescriptionPickups");
                }
                return _PrescriptionPickups;
            }
        }
        private ObjectSet<PrescriptionPickup> _PrescriptionPickups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Provider> Providers
        {
            get
            {
                if ((_Providers == null))
                {
                    _Providers = base.CreateObjectSet<Provider>("Providers");
                }
                return _Providers;
            }
        }
        private ObjectSet<Provider> _Providers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduleUnit> ScheduleUnits
        {
            get
            {
                if ((_ScheduleUnits == null))
                {
                    _ScheduleUnits = base.CreateObjectSet<ScheduleUnit>("ScheduleUnits");
                }
                return _ScheduleUnits;
            }
        }
        private ObjectSet<ScheduleUnit> _ScheduleUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Applications> vw_aspnet_Applications
        {
            get
            {
                if ((_vw_aspnet_Applications == null))
                {
                    _vw_aspnet_Applications = base.CreateObjectSet<vw_aspnet_Applications>("vw_aspnet_Applications");
                }
                return _vw_aspnet_Applications;
            }
        }
        private ObjectSet<vw_aspnet_Applications> _vw_aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers
        {
            get
            {
                if ((_vw_aspnet_MembershipUsers == null))
                {
                    _vw_aspnet_MembershipUsers = base.CreateObjectSet<vw_aspnet_MembershipUsers>("vw_aspnet_MembershipUsers");
                }
                return _vw_aspnet_MembershipUsers;
            }
        }
        private ObjectSet<vw_aspnet_MembershipUsers> _vw_aspnet_MembershipUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Roles> vw_aspnet_Roles
        {
            get
            {
                if ((_vw_aspnet_Roles == null))
                {
                    _vw_aspnet_Roles = base.CreateObjectSet<vw_aspnet_Roles>("vw_aspnet_Roles");
                }
                return _vw_aspnet_Roles;
            }
        }
        private ObjectSet<vw_aspnet_Roles> _vw_aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Users> vw_aspnet_Users
        {
            get
            {
                if ((_vw_aspnet_Users == null))
                {
                    _vw_aspnet_Users = base.CreateObjectSet<vw_aspnet_Users>("vw_aspnet_Users");
                }
                return _vw_aspnet_Users;
            }
        }
        private ObjectSet<vw_aspnet_Users> _vw_aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles
        {
            get
            {
                if ((_vw_aspnet_UsersInRoles == null))
                {
                    _vw_aspnet_UsersInRoles = base.CreateObjectSet<vw_aspnet_UsersInRoles>("vw_aspnet_UsersInRoles");
                }
                return _vw_aspnet_UsersInRoles;
            }
        }
        private ObjectSet<vw_aspnet_UsersInRoles> _vw_aspnet_UsersInRoles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__RefactorLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__RefactorLog(C__RefactorLog c__RefactorLog)
        {
            base.AddObject("C__RefactorLog", c__RefactorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_SchemaVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthorizationFollowUps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthorizationFollowUps(AuthorizationFollowUp authorizationFollowUp)
        {
            base.AddObject("AuthorizationFollowUps", authorizationFollowUp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthorizationNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthorizationNotes(AuthorizationNote authorizationNote)
        {
            base.AddObject("AuthorizationNotes", authorizationNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthorizationRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthorizationRequests(AuthorizationRequest authorizationRequest)
        {
            base.AddObject("AuthorizationRequests", authorizationRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DosageUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDosageUnits(DosageUnit dosageUnit)
        {
            base.AddObject("DosageUnits", dosageUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Facilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFacilities(Facility facility)
        {
            base.AddObject("Facilities", facility);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Insurers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsurers(Insurer insurer)
        {
            base.AddObject("Insurers", insurer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalAppointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalAppointments(MedicalAppointment medicalAppointment)
        {
            base.AddObject("MedicalAppointments", medicalAppointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedications(Medication medication)
        {
            base.AddObject("Medications", medication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrescriptionPickups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrescriptionPickups(PrescriptionPickup prescriptionPickup)
        {
            base.AddObject("PrescriptionPickups", prescriptionPickup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Providers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProviders(Provider provider)
        {
            base.AddObject("Providers", provider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScheduleUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScheduleUnits(ScheduleUnit scheduleUnit)
        {
            base.AddObject("ScheduleUnits", scheduleUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Applications(vw_aspnet_Applications vw_aspnet_Applications)
        {
            base.AddObject("vw_aspnet_Applications", vw_aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_MembershipUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_MembershipUsers(vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers)
        {
            base.AddObject("vw_aspnet_MembershipUsers", vw_aspnet_MembershipUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Roles(vw_aspnet_Roles vw_aspnet_Roles)
        {
            base.AddObject("vw_aspnet_Roles", vw_aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Users(vw_aspnet_Users vw_aspnet_Users)
        {
            base.AddObject("vw_aspnet_Users", vw_aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_UsersInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_UsersInRoles(vw_aspnet_UsersInRoles vw_aspnet_UsersInRoles)
        {
            base.AddObject("vw_aspnet_UsersInRoles", vw_aspnet_UsersInRoles);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static Account CreateAccount(global::System.Int32 accountId, global::System.String name, global::System.String emailAddress, global::System.Byte[] currentVersion)
        {
            Account account = new Account();
            account.AccountId = accountId;
            account.Name = name;
            account.EmailAddress = emailAddress;
            account.CurrentVersion = currentVersion;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                if (_AccountId != value)
                {
                    OnAccountIdChanging(value);
                    ReportPropertyChanging("AccountId");
                    _AccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountId");
                    OnAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Accounts_UserId_aspnet_Users_UserId", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("CareManagement.FK_Accounts_UserId_aspnet_Users_UserId", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("CareManagement.FK_Accounts_UserId_aspnet_Users_UserId", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("CareManagement.FK_Accounts_UserId_aspnet_Users_UserId", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("CareManagement.FK_Accounts_UserId_aspnet_Users_UserId", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "AuthorizationFollowUp")]
        public EntityCollection<AuthorizationFollowUp> AuthorizationFollowUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorizationFollowUp>("CareManagement.FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "AuthorizationFollowUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorizationFollowUp>("CareManagement.FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "AuthorizationFollowUp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationRequests_AccountId_Accounts_AccountId", "AuthorizationRequest")]
        public EntityCollection<AuthorizationRequest> AuthorizationRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorizationRequest>("CareManagement.FK_AuthorizationRequests_AccountId_Accounts_AccountId", "AuthorizationRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorizationRequest>("CareManagement.FK_AuthorizationRequests_AccountId_Accounts_AccountId", "AuthorizationRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Facilities_AccountId_Accounts_AccountId", "Facility")]
        public EntityCollection<Facility> Facilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Facility>("CareManagement.FK_Facilities_AccountId_Accounts_AccountId", "Facility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Facility>("CareManagement.FK_Facilities_AccountId_Accounts_AccountId", "Facility", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Insurer_AccountId_Accounts_AccountId", "Insurer")]
        public EntityCollection<Insurer> Insurers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Insurer>("CareManagement.FK_Insurer_AccountId_Accounts_AccountId", "Insurer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Insurer>("CareManagement.FK_Insurer_AccountId_Accounts_AccountId", "Insurer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_MedicalAppointments_AccountId_Accounts_AccountId", "MedicalAppointment")]
        public EntityCollection<MedicalAppointment> MedicalAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalAppointment>("CareManagement.FK_MedicalAppointments_AccountId_Accounts_AccountId", "MedicalAppointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalAppointment>("CareManagement.FK_MedicalAppointments_AccountId_Accounts_AccountId", "MedicalAppointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Medications_AccountId_Accounts_AccountId", "Medication")]
        public EntityCollection<Medication> Medications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medication>("CareManagement.FK_Medications_AccountId_Accounts_AccountId", "Medication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medication>("CareManagement.FK_Medications_AccountId_Accounts_AccountId", "Medication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_PrescriptionPickups_AccountId_Accounts_AccountId", "PrescriptionPickup")]
        public EntityCollection<PrescriptionPickup> PrescriptionPickups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionPickup>("CareManagement.FK_PrescriptionPickups_AccountId_Accounts_AccountId", "PrescriptionPickup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionPickup>("CareManagement.FK_PrescriptionPickups_AccountId_Accounts_AccountId", "PrescriptionPickup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK__aspnet_Me__Appli__3B75D760", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("CareManagement.FK__aspnet_Me__Appli__3B75D760", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("CareManagement.FK__aspnet_Me__Appli__3B75D760", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("CareManagement.FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("CareManagement.FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK__aspnet_Us__Appli__3E52440B", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("CareManagement.FK__aspnet_Us__Appli__3E52440B", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("CareManagement.FK__aspnet_Us__Appli__3E52440B", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK__aspnet_Me__Appli__3B75D760", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Me__Appli__3B75D760", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Me__Appli__3B75D760", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Me__Appli__3B75D760", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Me__Appli__3B75D760", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK__aspnet_Me__UserI__3C69FB99", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("CareManagement.FK__aspnet_Me__UserI__3C69FB99", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("CareManagement.FK__aspnet_Me__UserI__3C69FB99", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("CareManagement.FK__aspnet_Me__UserI__3C69FB99", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("CareManagement.FK__aspnet_Me__UserI__3C69FB99", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Ro__Appli__3D5E1FD2", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("CareManagement.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("CareManagement.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_SchemaVersions object.
        /// </summary>
        /// <param name="feature">Initial value of the Feature property.</param>
        /// <param name="compatibleSchemaVersion">Initial value of the CompatibleSchemaVersion property.</param>
        /// <param name="isCurrentVersion">Initial value of the IsCurrentVersion property.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Accounts_UserId_aspnet_Users_UserId", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("CareManagement.FK_Accounts_UserId_aspnet_Users_UserId", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("CareManagement.FK_Accounts_UserId_aspnet_Users_UserId", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK__aspnet_Us__Appli__3E52440B", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Us__Appli__3E52440B", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Us__Appli__3E52440B", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Us__Appli__3E52440B", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("CareManagement.FK__aspnet_Us__Appli__3E52440B", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK__aspnet_Me__UserI__3C69FB99", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("CareManagement.FK__aspnet_Me__UserI__3C69FB99", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("CareManagement.FK__aspnet_Me__UserI__3C69FB99", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("CareManagement.FK__aspnet_Me__UserI__3C69FB99", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("CareManagement.FK__aspnet_Me__UserI__3C69FB99", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("CareManagement.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("CareManagement.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="AuthorizationFollowUp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthorizationFollowUp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthorizationFollowUp object.
        /// </summary>
        /// <param name="authorizationFollowUpId">Initial value of the AuthorizationFollowUpId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="authorizationRequestId">Initial value of the AuthorizationRequestId property.</param>
        /// <param name="appointmentDateTime">Initial value of the AppointmentDateTime property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static AuthorizationFollowUp CreateAuthorizationFollowUp(global::System.Int32 authorizationFollowUpId, global::System.Int32 accountId, global::System.Int32 authorizationRequestId, global::System.DateTimeOffset appointmentDateTime, global::System.Byte[] currentVersion)
        {
            AuthorizationFollowUp authorizationFollowUp = new AuthorizationFollowUp();
            authorizationFollowUp.AuthorizationFollowUpId = authorizationFollowUpId;
            authorizationFollowUp.AccountId = accountId;
            authorizationFollowUp.AuthorizationRequestId = authorizationRequestId;
            authorizationFollowUp.AppointmentDateTime = appointmentDateTime;
            authorizationFollowUp.CurrentVersion = currentVersion;
            return authorizationFollowUp;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorizationFollowUpId
        {
            get
            {
                return _AuthorizationFollowUpId;
            }
            set
            {
                if (_AuthorizationFollowUpId != value)
                {
                    OnAuthorizationFollowUpIdChanging(value);
                    ReportPropertyChanging("AuthorizationFollowUpId");
                    _AuthorizationFollowUpId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthorizationFollowUpId");
                    OnAuthorizationFollowUpIdChanged();
                }
            }
        }
        private global::System.Int32 _AuthorizationFollowUpId;
        partial void OnAuthorizationFollowUpIdChanging(global::System.Int32 value);
        partial void OnAuthorizationFollowUpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorizationRequestId
        {
            get
            {
                return _AuthorizationRequestId;
            }
            set
            {
                OnAuthorizationRequestIdChanging(value);
                ReportPropertyChanging("AuthorizationRequestId");
                _AuthorizationRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorizationRequestId");
                OnAuthorizationRequestIdChanged();
            }
        }
        private global::System.Int32 _AuthorizationRequestId;
        partial void OnAuthorizationRequestIdChanging(global::System.Int32 value);
        partial void OnAuthorizationRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset AppointmentDateTime
        {
            get
            {
                return _AppointmentDateTime;
            }
            set
            {
                OnAppointmentDateTimeChanging(value);
                ReportPropertyChanging("AppointmentDateTime");
                _AppointmentDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppointmentDateTime");
                OnAppointmentDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _AppointmentDateTime;
        partial void OnAppointmentDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnAppointmentDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CareManagement.FK_AuthorizationFollowUps_AccountId_Accounts_AccountId", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest")]
        public AuthorizationRequest AuthorizationRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorizationRequest>("CareManagement.FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorizationRequest>("CareManagement.FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AuthorizationRequest> AuthorizationRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorizationRequest>("CareManagement.FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AuthorizationRequest>("CareManagement.FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="AuthorizationNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthorizationNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthorizationNote object.
        /// </summary>
        /// <param name="authorizationNoteId">Initial value of the AuthorizationNoteId property.</param>
        /// <param name="authorizationRequestId">Initial value of the AuthorizationRequestId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        public static AuthorizationNote CreateAuthorizationNote(global::System.Int32 authorizationNoteId, global::System.Int32 authorizationRequestId, global::System.DateTimeOffset created, global::System.String note, global::System.Byte[] currentVersion, global::System.Int32 accountId)
        {
            AuthorizationNote authorizationNote = new AuthorizationNote();
            authorizationNote.AuthorizationNoteId = authorizationNoteId;
            authorizationNote.AuthorizationRequestId = authorizationRequestId;
            authorizationNote.Created = created;
            authorizationNote.Note = note;
            authorizationNote.CurrentVersion = currentVersion;
            authorizationNote.AccountId = accountId;
            return authorizationNote;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorizationNoteId
        {
            get
            {
                return _AuthorizationNoteId;
            }
            set
            {
                if (_AuthorizationNoteId != value)
                {
                    OnAuthorizationNoteIdChanging(value);
                    ReportPropertyChanging("AuthorizationNoteId");
                    _AuthorizationNoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthorizationNoteId");
                    OnAuthorizationNoteIdChanged();
                }
            }
        }
        private global::System.Int32 _AuthorizationNoteId;
        partial void OnAuthorizationNoteIdChanging(global::System.Int32 value);
        partial void OnAuthorizationNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorizationRequestId
        {
            get
            {
                return _AuthorizationRequestId;
            }
            set
            {
                OnAuthorizationRequestIdChanging(value);
                ReportPropertyChanging("AuthorizationRequestId");
                _AuthorizationRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuthorizationRequestId");
                OnAuthorizationRequestIdChanged();
            }
        }
        private global::System.Int32 _AuthorizationRequestId;
        partial void OnAuthorizationRequestIdChanging(global::System.Int32 value);
        partial void OnAuthorizationRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTimeOffset _Created;
        partial void OnCreatedChanging(global::System.DateTimeOffset value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest")]
        public AuthorizationRequest AuthorizationRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorizationRequest>("CareManagement.FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorizationRequest>("CareManagement.FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AuthorizationRequest> AuthorizationRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuthorizationRequest>("CareManagement.FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AuthorizationRequest>("CareManagement.FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="AuthorizationRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthorizationRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthorizationRequest object.
        /// </summary>
        /// <param name="authorizationRequestId">Initial value of the AuthorizationRequestId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="insurerId">Initial value of the InsurerId property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static AuthorizationRequest CreateAuthorizationRequest(global::System.Int32 authorizationRequestId, global::System.Int32 accountId, global::System.Int32 insurerId, global::System.Byte[] currentVersion)
        {
            AuthorizationRequest authorizationRequest = new AuthorizationRequest();
            authorizationRequest.AuthorizationRequestId = authorizationRequestId;
            authorizationRequest.AccountId = accountId;
            authorizationRequest.InsurerId = insurerId;
            authorizationRequest.CurrentVersion = currentVersion;
            return authorizationRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorizationRequestId
        {
            get
            {
                return _AuthorizationRequestId;
            }
            set
            {
                if (_AuthorizationRequestId != value)
                {
                    OnAuthorizationRequestIdChanging(value);
                    ReportPropertyChanging("AuthorizationRequestId");
                    _AuthorizationRequestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthorizationRequestId");
                    OnAuthorizationRequestIdChanged();
                }
            }
        }
        private global::System.Int32 _AuthorizationRequestId;
        partial void OnAuthorizationRequestIdChanging(global::System.Int32 value);
        partial void OnAuthorizationRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InsurerId
        {
            get
            {
                return _InsurerId;
            }
            set
            {
                OnInsurerIdChanging(value);
                ReportPropertyChanging("InsurerId");
                _InsurerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsurerId");
                OnInsurerIdChanged();
            }
        }
        private global::System.Int32 _InsurerId;
        partial void OnInsurerIdChanging(global::System.Int32 value);
        partial void OnInsurerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationRequests_AccountId_Accounts_AccountId", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_AuthorizationRequests_AccountId_Accounts_AccountId", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_AuthorizationRequests_AccountId_Accounts_AccountId", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_AuthorizationRequests_AccountId_Accounts_AccountId", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CareManagement.FK_AuthorizationRequests_AccountId_Accounts_AccountId", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationFollowUp")]
        public EntityCollection<AuthorizationFollowUp> AuthorizationFollowUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorizationFollowUp>("CareManagement.FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationFollowUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorizationFollowUp>("CareManagement.FK_AuthorizationFollowUps_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationFollowUp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationNote")]
        public EntityCollection<AuthorizationNote> AuthorizationNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorizationNote>("CareManagement.FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorizationNote>("CareManagement.FK_AuthorizationNotes_AuthorizationRequestId_AuthorizationRequests_AuthorizationRequestId", "AuthorizationNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "Insurer")]
        public Insurer Insurer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Insurer>("CareManagement.FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "Insurer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Insurer>("CareManagement.FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "Insurer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Insurer> InsurerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Insurer>("CareManagement.FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "Insurer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Insurer>("CareManagement.FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "Insurer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="C__RefactorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__RefactorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__RefactorLog object.
        /// </summary>
        /// <param name="operationKey">Initial value of the OperationKey property.</param>
        public static C__RefactorLog CreateC__RefactorLog(global::System.Guid operationKey)
        {
            C__RefactorLog c__RefactorLog = new C__RefactorLog();
            c__RefactorLog.OperationKey = operationKey;
            return c__RefactorLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationKey
        {
            get
            {
                return _OperationKey;
            }
            set
            {
                if (_OperationKey != value)
                {
                    OnOperationKeyChanging(value);
                    ReportPropertyChanging("OperationKey");
                    _OperationKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OperationKey");
                    OnOperationKeyChanged();
                }
            }
        }
        private global::System.Guid _OperationKey;
        partial void OnOperationKeyChanging(global::System.Guid value);
        partial void OnOperationKeyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="DosageUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DosageUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DosageUnit object.
        /// </summary>
        /// <param name="dosageUnitId">Initial value of the DosageUnitId property.</param>
        /// <param name="unit">Initial value of the Unit property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static DosageUnit CreateDosageUnit(global::System.Int32 dosageUnitId, global::System.String unit, global::System.Byte[] currentVersion)
        {
            DosageUnit dosageUnit = new DosageUnit();
            dosageUnit.DosageUnitId = dosageUnitId;
            dosageUnit.Unit = unit;
            dosageUnit.CurrentVersion = currentVersion;
            return dosageUnit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DosageUnitId
        {
            get
            {
                return _DosageUnitId;
            }
            set
            {
                if (_DosageUnitId != value)
                {
                    OnDosageUnitIdChanging(value);
                    ReportPropertyChanging("DosageUnitId");
                    _DosageUnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DosageUnitId");
                    OnDosageUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _DosageUnitId;
        partial void OnDosageUnitIdChanging(global::System.Int32 value);
        partial void OnDosageUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "Medication")]
        public EntityCollection<Medication> Medications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Medication>("CareManagement.FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "Medication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Medication>("CareManagement.FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "Medication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="Facility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Facility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Facility object.
        /// </summary>
        /// <param name="facilityId">Initial value of the FacilityId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static Facility CreateFacility(global::System.Int32 facilityId, global::System.Int32 accountId, global::System.String name, global::System.Byte[] currentVersion)
        {
            Facility facility = new Facility();
            facility.FacilityId = facilityId;
            facility.AccountId = accountId;
            facility.Name = name;
            facility.CurrentVersion = currentVersion;
            return facility;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacilityId
        {
            get
            {
                return _FacilityId;
            }
            set
            {
                if (_FacilityId != value)
                {
                    OnFacilityIdChanging(value);
                    ReportPropertyChanging("FacilityId");
                    _FacilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FacilityId");
                    OnFacilityIdChanged();
                }
            }
        }
        private global::System.Int32 _FacilityId;
        partial void OnFacilityIdChanging(global::System.Int32 value);
        partial void OnFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Facilities_AccountId_Accounts_AccountId", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Facilities_AccountId_Accounts_AccountId", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Facilities_AccountId_Accounts_AccountId", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Facilities_AccountId_Accounts_AccountId", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CareManagement.FK_Facilities_AccountId_Accounts_AccountId", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Providers_FacilityId_Facilities_FacilityId", "Provider")]
        public EntityCollection<Provider> Providers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Provider>("CareManagement.FK_Providers_FacilityId_Facilities_FacilityId", "Provider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Provider>("CareManagement.FK_Providers_FacilityId_Facilities_FacilityId", "Provider", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="Insurer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Insurer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Insurer object.
        /// </summary>
        /// <param name="insurerId">Initial value of the InsurerId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static Insurer CreateInsurer(global::System.Int32 insurerId, global::System.Int32 accountId, global::System.String name, global::System.Byte[] currentVersion)
        {
            Insurer insurer = new Insurer();
            insurer.InsurerId = insurerId;
            insurer.AccountId = accountId;
            insurer.Name = name;
            insurer.CurrentVersion = currentVersion;
            return insurer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InsurerId
        {
            get
            {
                return _InsurerId;
            }
            set
            {
                if (_InsurerId != value)
                {
                    OnInsurerIdChanging(value);
                    ReportPropertyChanging("InsurerId");
                    _InsurerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InsurerId");
                    OnInsurerIdChanged();
                }
            }
        }
        private global::System.Int32 _InsurerId;
        partial void OnInsurerIdChanging(global::System.Int32 value);
        partial void OnInsurerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Insurer_AccountId_Accounts_AccountId", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Insurer_AccountId_Accounts_AccountId", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Insurer_AccountId_Accounts_AccountId", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Insurer_AccountId_Accounts_AccountId", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CareManagement.FK_Insurer_AccountId_Accounts_AccountId", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "AuthorizationRequest")]
        public EntityCollection<AuthorizationRequest> AuthorizationRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorizationRequest>("CareManagement.FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "AuthorizationRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorizationRequest>("CareManagement.FK_AuthorizationRequests_InsurerId_Insurers_InsurerId", "AuthorizationRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="thread">Initial value of the Thread property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="logger">Initial value of the Logger property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.DateTime date, global::System.String thread, global::System.String level, global::System.String logger, global::System.String message)
        {
            Log log = new Log();
            log.Id = id;
            log.Date = date;
            log.Thread = thread;
            log.Level = level;
            log.Logger = logger;
            log.Message = message;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Thread
        {
            get
            {
                return _Thread;
            }
            set
            {
                OnThreadChanging(value);
                ReportPropertyChanging("Thread");
                _Thread = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Thread");
                OnThreadChanged();
            }
        }
        private global::System.String _Thread;
        partial void OnThreadChanging(global::System.String value);
        partial void OnThreadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Logger
        {
            get
            {
                return _Logger;
            }
            set
            {
                OnLoggerChanging(value);
                ReportPropertyChanging("Logger");
                _Logger = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Logger");
                OnLoggerChanged();
            }
        }
        private global::System.String _Logger;
        partial void OnLoggerChanging(global::System.String value);
        partial void OnLoggerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="MedicalAppointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalAppointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalAppointment object.
        /// </summary>
        /// <param name="medicalAppointmentId">Initial value of the MedicalAppointmentId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="providerId">Initial value of the ProviderId property.</param>
        /// <param name="appointmentDateTime">Initial value of the AppointmentDateTime property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static MedicalAppointment CreateMedicalAppointment(global::System.Int32 medicalAppointmentId, global::System.Int32 accountId, global::System.Int32 providerId, global::System.DateTimeOffset appointmentDateTime, global::System.Byte[] currentVersion)
        {
            MedicalAppointment medicalAppointment = new MedicalAppointment();
            medicalAppointment.MedicalAppointmentId = medicalAppointmentId;
            medicalAppointment.AccountId = accountId;
            medicalAppointment.ProviderId = providerId;
            medicalAppointment.AppointmentDateTime = appointmentDateTime;
            medicalAppointment.CurrentVersion = currentVersion;
            return medicalAppointment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalAppointmentId
        {
            get
            {
                return _MedicalAppointmentId;
            }
            set
            {
                if (_MedicalAppointmentId != value)
                {
                    OnMedicalAppointmentIdChanging(value);
                    ReportPropertyChanging("MedicalAppointmentId");
                    _MedicalAppointmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicalAppointmentId");
                    OnMedicalAppointmentIdChanged();
                }
            }
        }
        private global::System.Int32 _MedicalAppointmentId;
        partial void OnMedicalAppointmentIdChanging(global::System.Int32 value);
        partial void OnMedicalAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProviderId
        {
            get
            {
                return _ProviderId;
            }
            set
            {
                OnProviderIdChanging(value);
                ReportPropertyChanging("ProviderId");
                _ProviderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProviderId");
                OnProviderIdChanged();
            }
        }
        private global::System.Int32 _ProviderId;
        partial void OnProviderIdChanging(global::System.Int32 value);
        partial void OnProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset AppointmentDateTime
        {
            get
            {
                return _AppointmentDateTime;
            }
            set
            {
                OnAppointmentDateTimeChanging(value);
                ReportPropertyChanging("AppointmentDateTime");
                _AppointmentDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppointmentDateTime");
                OnAppointmentDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _AppointmentDateTime;
        partial void OnAppointmentDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnAppointmentDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScheduleUnitId
        {
            get
            {
                return _ScheduleUnitId;
            }
            set
            {
                OnScheduleUnitIdChanging(value);
                ReportPropertyChanging("ScheduleUnitId");
                _ScheduleUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleUnitId");
                OnScheduleUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ScheduleUnitId;
        partial void OnScheduleUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnScheduleUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Decimal> _Length;
        partial void OnLengthChanging(Nullable<global::System.Decimal> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_MedicalAppointments_AccountId_Accounts_AccountId", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_MedicalAppointments_AccountId_Accounts_AccountId", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_MedicalAppointments_AccountId_Accounts_AccountId", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_MedicalAppointments_AccountId_Accounts_AccountId", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CareManagement.FK_MedicalAppointments_AccountId_Accounts_AccountId", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_MedicalAppointments_ProviderId_Providers_ProviderId", "Provider")]
        public Provider Provider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("CareManagement.FK_MedicalAppointments_ProviderId_Providers_ProviderId", "Provider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("CareManagement.FK_MedicalAppointments_ProviderId_Providers_ProviderId", "Provider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Provider> ProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("CareManagement.FK_MedicalAppointments_ProviderId_Providers_ProviderId", "Provider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Provider>("CareManagement.FK_MedicalAppointments_ProviderId_Providers_ProviderId", "Provider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "ScheduleUnit")]
        public ScheduleUnit ScheduleUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleUnit>("CareManagement.FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "ScheduleUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleUnit>("CareManagement.FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "ScheduleUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScheduleUnit> ScheduleUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScheduleUnit>("CareManagement.FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "ScheduleUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScheduleUnit>("CareManagement.FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "ScheduleUnit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="Medication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medication object.
        /// </summary>
        /// <param name="medicationId">Initial value of the MedicationId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static Medication CreateMedication(global::System.Int32 medicationId, global::System.Int32 accountId, global::System.String name, global::System.Byte[] currentVersion)
        {
            Medication medication = new Medication();
            medication.MedicationId = medicationId;
            medication.AccountId = accountId;
            medication.Name = name;
            medication.CurrentVersion = currentVersion;
            return medication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicationId
        {
            get
            {
                return _MedicationId;
            }
            set
            {
                if (_MedicationId != value)
                {
                    OnMedicationIdChanging(value);
                    ReportPropertyChanging("MedicationId");
                    _MedicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicationId");
                    OnMedicationIdChanged();
                }
            }
        }
        private global::System.Int32 _MedicationId;
        partial void OnMedicationIdChanging(global::System.Int32 value);
        partial void OnMedicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DosageUnitId
        {
            get
            {
                return _DosageUnitId;
            }
            set
            {
                OnDosageUnitIdChanging(value);
                ReportPropertyChanging("DosageUnitId");
                _DosageUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DosageUnitId");
                OnDosageUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DosageUnitId;
        partial void OnDosageUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnDosageUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Medications_AccountId_Accounts_AccountId", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Medications_AccountId_Accounts_AccountId", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Medications_AccountId_Accounts_AccountId", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_Medications_AccountId_Accounts_AccountId", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CareManagement.FK_Medications_AccountId_Accounts_AccountId", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "DosageUnit")]
        public DosageUnit DosageUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DosageUnit>("CareManagement.FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "DosageUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DosageUnit>("CareManagement.FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "DosageUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DosageUnit> DosageUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DosageUnit>("CareManagement.FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "DosageUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DosageUnit>("CareManagement.FK_Medications_DosageUnitId_DosageUnits_DosageUnitId", "DosageUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_PrescriptionPickups_MedicationId", "PrescriptionPickup")]
        public EntityCollection<PrescriptionPickup> PrescriptionPickups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionPickup>("CareManagement.FK_PrescriptionPickups_MedicationId", "PrescriptionPickup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionPickup>("CareManagement.FK_PrescriptionPickups_MedicationId", "PrescriptionPickup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="PrescriptionPickup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrescriptionPickup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrescriptionPickup object.
        /// </summary>
        /// <param name="prescriptionPickupId">Initial value of the PrescriptionPickupId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="medicationId">Initial value of the MedicationId property.</param>
        /// <param name="appointmentDateTime">Initial value of the AppointmentDateTime property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static PrescriptionPickup CreatePrescriptionPickup(global::System.Int32 prescriptionPickupId, global::System.Int32 accountId, global::System.Int32 medicationId, global::System.DateTimeOffset appointmentDateTime, global::System.Byte[] currentVersion)
        {
            PrescriptionPickup prescriptionPickup = new PrescriptionPickup();
            prescriptionPickup.PrescriptionPickupId = prescriptionPickupId;
            prescriptionPickup.AccountId = accountId;
            prescriptionPickup.MedicationId = medicationId;
            prescriptionPickup.AppointmentDateTime = appointmentDateTime;
            prescriptionPickup.CurrentVersion = currentVersion;
            return prescriptionPickup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrescriptionPickupId
        {
            get
            {
                return _PrescriptionPickupId;
            }
            set
            {
                if (_PrescriptionPickupId != value)
                {
                    OnPrescriptionPickupIdChanging(value);
                    ReportPropertyChanging("PrescriptionPickupId");
                    _PrescriptionPickupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrescriptionPickupId");
                    OnPrescriptionPickupIdChanged();
                }
            }
        }
        private global::System.Int32 _PrescriptionPickupId;
        partial void OnPrescriptionPickupIdChanging(global::System.Int32 value);
        partial void OnPrescriptionPickupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicationId
        {
            get
            {
                return _MedicationId;
            }
            set
            {
                OnMedicationIdChanging(value);
                ReportPropertyChanging("MedicationId");
                _MedicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicationId");
                OnMedicationIdChanged();
            }
        }
        private global::System.Int32 _MedicationId;
        partial void OnMedicationIdChanging(global::System.Int32 value);
        partial void OnMedicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset AppointmentDateTime
        {
            get
            {
                return _AppointmentDateTime;
            }
            set
            {
                OnAppointmentDateTimeChanging(value);
                ReportPropertyChanging("AppointmentDateTime");
                _AppointmentDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppointmentDateTime");
                OnAppointmentDateTimeChanged();
            }
        }
        private global::System.DateTimeOffset _AppointmentDateTime;
        partial void OnAppointmentDateTimeChanging(global::System.DateTimeOffset value);
        partial void OnAppointmentDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_PrescriptionPickups_AccountId_Accounts_AccountId", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_PrescriptionPickups_AccountId_Accounts_AccountId", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_PrescriptionPickups_AccountId_Accounts_AccountId", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CareManagement.FK_PrescriptionPickups_AccountId_Accounts_AccountId", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CareManagement.FK_PrescriptionPickups_AccountId_Accounts_AccountId", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_PrescriptionPickups_MedicationId", "Medication")]
        public Medication Medication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medication>("CareManagement.FK_PrescriptionPickups_MedicationId", "Medication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medication>("CareManagement.FK_PrescriptionPickups_MedicationId", "Medication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medication> MedicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medication>("CareManagement.FK_PrescriptionPickups_MedicationId", "Medication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medication>("CareManagement.FK_PrescriptionPickups_MedicationId", "Medication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="Provider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Provider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Provider object.
        /// </summary>
        /// <param name="providerId">Initial value of the ProviderId property.</param>
        /// <param name="facilityId">Initial value of the FacilityId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        public static Provider CreateProvider(global::System.Int32 providerId, global::System.Int32 facilityId, global::System.String name, global::System.Byte[] currentVersion, global::System.Int32 accountId)
        {
            Provider provider = new Provider();
            provider.ProviderId = providerId;
            provider.FacilityId = facilityId;
            provider.Name = name;
            provider.CurrentVersion = currentVersion;
            provider.AccountId = accountId;
            return provider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProviderId
        {
            get
            {
                return _ProviderId;
            }
            set
            {
                if (_ProviderId != value)
                {
                    OnProviderIdChanging(value);
                    ReportPropertyChanging("ProviderId");
                    _ProviderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProviderId");
                    OnProviderIdChanged();
                }
            }
        }
        private global::System.Int32 _ProviderId;
        partial void OnProviderIdChanging(global::System.Int32 value);
        partial void OnProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacilityId
        {
            get
            {
                return _FacilityId;
            }
            set
            {
                OnFacilityIdChanging(value);
                ReportPropertyChanging("FacilityId");
                _FacilityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacilityId");
                OnFacilityIdChanged();
            }
        }
        private global::System.Int32 _FacilityId;
        partial void OnFacilityIdChanging(global::System.Int32 value);
        partial void OnFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_Providers_FacilityId_Facilities_FacilityId", "Facility")]
        public Facility Facility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CareManagement.FK_Providers_FacilityId_Facilities_FacilityId", "Facility").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CareManagement.FK_Providers_FacilityId_Facilities_FacilityId", "Facility").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Facility> FacilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("CareManagement.FK_Providers_FacilityId_Facilities_FacilityId", "Facility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Facility>("CareManagement.FK_Providers_FacilityId_Facilities_FacilityId", "Facility", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_MedicalAppointments_ProviderId_Providers_ProviderId", "MedicalAppointment")]
        public EntityCollection<MedicalAppointment> MedicalAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalAppointment>("CareManagement.FK_MedicalAppointments_ProviderId_Providers_ProviderId", "MedicalAppointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalAppointment>("CareManagement.FK_MedicalAppointments_ProviderId_Providers_ProviderId", "MedicalAppointment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="ScheduleUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduleUnit object.
        /// </summary>
        /// <param name="scheduleUnitId">Initial value of the ScheduleUnitId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="currentVersion">Initial value of the CurrentVersion property.</param>
        public static ScheduleUnit CreateScheduleUnit(global::System.Int32 scheduleUnitId, global::System.String description, global::System.Byte[] currentVersion)
        {
            ScheduleUnit scheduleUnit = new ScheduleUnit();
            scheduleUnit.ScheduleUnitId = scheduleUnitId;
            scheduleUnit.Description = description;
            scheduleUnit.CurrentVersion = currentVersion;
            return scheduleUnit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleUnitId
        {
            get
            {
                return _ScheduleUnitId;
            }
            set
            {
                if (_ScheduleUnitId != value)
                {
                    OnScheduleUnitIdChanging(value);
                    ReportPropertyChanging("ScheduleUnitId");
                    _ScheduleUnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScheduleUnitId");
                    OnScheduleUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _ScheduleUnitId;
        partial void OnScheduleUnitIdChanging(global::System.Int32 value);
        partial void OnScheduleUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] CurrentVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_CurrentVersion);
            }
            set
            {
                OnCurrentVersionChanging(value);
                ReportPropertyChanging("CurrentVersion");
                _CurrentVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentVersion");
                OnCurrentVersionChanged();
            }
        }
        private global::System.Byte[] _CurrentVersion;
        partial void OnCurrentVersionChanging(global::System.Byte[] value);
        partial void OnCurrentVersionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CareManagement", "FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "MedicalAppointment")]
        public EntityCollection<MedicalAppointment> MedicalAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalAppointment>("CareManagement.FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "MedicalAppointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalAppointment>("CareManagement.FK_MedicalAppointments_ScheduleUnitId_ScheduleUnits_ScheduleUnitId", "MedicalAppointment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="vw_aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static vw_aspnet_Applications Createvw_aspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            vw_aspnet_Applications vw_aspnet_Applications = new vw_aspnet_Applications();
            vw_aspnet_Applications.ApplicationName = applicationName;
            vw_aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            vw_aspnet_Applications.ApplicationId = applicationId;
            return vw_aspnet_Applications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                if (_ApplicationName != value)
                {
                    OnApplicationNameChanging(value);
                    ReportPropertyChanging("ApplicationName");
                    _ApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ApplicationName");
                    OnApplicationNameChanged();
                }
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                if (_LoweredApplicationName != value)
                {
                    OnLoweredApplicationNameChanging(value);
                    ReportPropertyChanging("LoweredApplicationName");
                    _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredApplicationName");
                    OnLoweredApplicationNameChanged();
                }
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="vw_aspnet_MembershipUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_MembershipUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_MembershipUsers object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_MembershipUsers Createvw_aspnet_MembershipUsers(global::System.Guid userId, global::System.Int32 passwordFormat, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart, global::System.Guid applicationId, global::System.String userName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers = new vw_aspnet_MembershipUsers();
            vw_aspnet_MembershipUsers.UserId = userId;
            vw_aspnet_MembershipUsers.PasswordFormat = passwordFormat;
            vw_aspnet_MembershipUsers.IsApproved = isApproved;
            vw_aspnet_MembershipUsers.IsLockedOut = isLockedOut;
            vw_aspnet_MembershipUsers.CreateDate = createDate;
            vw_aspnet_MembershipUsers.LastLoginDate = lastLoginDate;
            vw_aspnet_MembershipUsers.LastPasswordChangedDate = lastPasswordChangedDate;
            vw_aspnet_MembershipUsers.LastLockoutDate = lastLockoutDate;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            vw_aspnet_MembershipUsers.ApplicationId = applicationId;
            vw_aspnet_MembershipUsers.UserName = userName;
            vw_aspnet_MembershipUsers.IsAnonymous = isAnonymous;
            vw_aspnet_MembershipUsers.LastActivityDate = lastActivityDate;
            return vw_aspnet_MembershipUsers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                if (_PasswordFormat != value)
                {
                    OnPasswordFormatChanging(value);
                    ReportPropertyChanging("PasswordFormat");
                    _PasswordFormat = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PasswordFormat");
                    OnPasswordFormatChanged();
                }
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                if (_IsApproved != value)
                {
                    OnIsApprovedChanging(value);
                    ReportPropertyChanging("IsApproved");
                    _IsApproved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsApproved");
                    OnIsApprovedChanged();
                }
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                if (_IsLockedOut != value)
                {
                    OnIsLockedOutChanging(value);
                    ReportPropertyChanging("IsLockedOut");
                    _IsLockedOut = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsLockedOut");
                    OnIsLockedOutChanged();
                }
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                if (_CreateDate != value)
                {
                    OnCreateDateChanging(value);
                    ReportPropertyChanging("CreateDate");
                    _CreateDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreateDate");
                    OnCreateDateChanged();
                }
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                if (_LastLoginDate != value)
                {
                    OnLastLoginDateChanging(value);
                    ReportPropertyChanging("LastLoginDate");
                    _LastLoginDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLoginDate");
                    OnLastLoginDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                if (_LastPasswordChangedDate != value)
                {
                    OnLastPasswordChangedDateChanging(value);
                    ReportPropertyChanging("LastPasswordChangedDate");
                    _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastPasswordChangedDate");
                    OnLastPasswordChangedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                if (_LastLockoutDate != value)
                {
                    OnLastLockoutDateChanging(value);
                    ReportPropertyChanging("LastLockoutDate");
                    _LastLockoutDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLockoutDate");
                    OnLastLockoutDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                if (_FailedPasswordAttemptCount != value)
                {
                    OnFailedPasswordAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptCount");
                    _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptCount");
                    OnFailedPasswordAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAttemptWindowStart != value)
                {
                    OnFailedPasswordAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                    _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                    OnFailedPasswordAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptCount != value)
                {
                    OnFailedPasswordAnswerAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                    _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                    OnFailedPasswordAnswerAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptWindowStart != value)
                {
                    OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                    _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                    OnFailedPasswordAnswerAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="vw_aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static vw_aspnet_Roles Createvw_aspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            vw_aspnet_Roles vw_aspnet_Roles = new vw_aspnet_Roles();
            vw_aspnet_Roles.ApplicationId = applicationId;
            vw_aspnet_Roles.RoleId = roleId;
            vw_aspnet_Roles.RoleName = roleName;
            vw_aspnet_Roles.LoweredRoleName = loweredRoleName;
            return vw_aspnet_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                if (_LoweredRoleName != value)
                {
                    OnLoweredRoleNameChanging(value);
                    ReportPropertyChanging("LoweredRoleName");
                    _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredRoleName");
                    OnLoweredRoleNameChanged();
                }
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="vw_aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_Users Createvw_aspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_Users vw_aspnet_Users = new vw_aspnet_Users();
            vw_aspnet_Users.ApplicationId = applicationId;
            vw_aspnet_Users.UserId = userId;
            vw_aspnet_Users.UserName = userName;
            vw_aspnet_Users.LoweredUserName = loweredUserName;
            vw_aspnet_Users.IsAnonymous = isAnonymous;
            vw_aspnet_Users.LastActivityDate = lastActivityDate;
            return vw_aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                if (_LoweredUserName != value)
                {
                    OnLoweredUserNameChanging(value);
                    ReportPropertyChanging("LoweredUserName");
                    _LoweredUserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredUserName");
                    OnLoweredUserNameChanged();
                }
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CareManagement", Name="vw_aspnet_UsersInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_UsersInRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_UsersInRoles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static vw_aspnet_UsersInRoles Createvw_aspnet_UsersInRoles(global::System.Guid userId, global::System.Guid roleId)
        {
            vw_aspnet_UsersInRoles vw_aspnet_UsersInRoles = new vw_aspnet_UsersInRoles();
            vw_aspnet_UsersInRoles.UserId = userId;
            vw_aspnet_UsersInRoles.RoleId = roleId;
            return vw_aspnet_UsersInRoles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();

        #endregion
    
    }

    #endregion
    
}
