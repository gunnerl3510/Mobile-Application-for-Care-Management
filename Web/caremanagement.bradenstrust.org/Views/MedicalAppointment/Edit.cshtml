@model Infrastructure.Model.Medical.MedicalAppointment

@{
    ViewBag.Title = "Edit Medical Appointment";
}

<h2>Edit Medical Appointment</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Medical Appointment</legend>
        
        @if (ViewBag.ErrorMessage != null)
        {
            <p class="error">@ViewBag.ErrorMessage</p>
        }
        
        @if (ViewBag.InnerErrorMessage != null)
        {
            <p class="error">@ViewBag.InnerErrorMessage</p>
        }

        @Html.HiddenFor(model => model.CurrentVersion)
        
        @if (Roles.IsUserInRole("Admin"))
        {
            <div class="display-label">
                @Html.LabelFor(model => model.AccountId)
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.AccountId)
            </div>
        }
        @Html.HiddenFor(model => model.AccountId)

        <div class="display-label">Provider Id</div>
        <div class="display-field">
            @Html.DisplayFor(model => model.ProviderId)
        </div>
        @Html.HiddenFor(model => model.ProviderId)

        <div class="display-label">Appointment Id</div>
        <div class="display-field">
            @Html.DisplayFor(model => model.Id)
        </div>
        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.LocalAppointmentDateTimeString)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LocalAppointmentDateTimeString)
            @Html.ValidationMessageFor(model => model.AppointmentDateTimeUtc)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Length)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Length)
            @Html.ValidationMessageFor(model => model.Length)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AppointmentLengthUnits)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(appointment => appointment.AppointmentLengthUnits, new SelectList(Enum.GetValues(typeof(Infrastructure.Model.Scheduling.ScheduleUnits))))
            @Html.ValidationMessageFor(model => model.AppointmentLengthUnits)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

@if (ViewBag.FacilityId == null)
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}
else
{
    <div>
        @Html.RouteLink("Back to List", "MedicalAppointments", new { facilityid = ViewBag.FacilityId, providerid = Model.ProviderId })
    </div>
}
