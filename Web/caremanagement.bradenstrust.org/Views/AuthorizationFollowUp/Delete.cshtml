@model Infrastructure.Model.Insurance.AuthorizationFollowUp

@{
    ViewBag.Title = "Delete Authorization Follow Up";
}

<h2>Delete Authorization Follow Up</h2>

<h3>Are you sure you want to delete this?</h3>
<fieldset>
    <legend>Follow Up</legend>
        
    @if (ViewBag.ErrorMessage != null)
    {
        <p class="error">@ViewBag.ErrorMessage</p>
    }
        
    @if (ViewBag.InnerErrorMessage != null)
    {
        <p class="error">@ViewBag.InnerErrorMessage</p>
    }
    
    @if (Roles.IsUserInRole("Admin"))
    {
        <div class="display-label">AccountId</div>
        <div class="display-field">
            @Html.DisplayFor(model => model.AccountId)
        </div>
    }

    <div class="display-label">Authorization Id</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.AuthorizationRequestId)
    </div>

    <div class="display-label">Follow Up Id</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Id)
    </div>

    <div class="display-label">Appointment Date and Time</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.LocalAppointmentDateTimeString)
    </div>

    <div class="display-label">Description</div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Description)
    </div>
</fieldset>
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.AccountId)
    @Html.HiddenFor(model => model.AppointmentDateTimeUtc)
    @Html.HiddenFor(model => model.CurrentVersion)
    @Html.HiddenFor(model => model.Description)
    @Html.HiddenFor(model => model.Id)

    if (ViewBag.InsurerId == null)
    {
        <p>
            <input type="submit" value="Delete" /> |
            @Html.ActionLink("Back to List", "Index")
        </p>
    }
    else
    {
        <p>
            <input type="submit" value="Delete" /> |
            @Html.RouteLink("Back to List", "AuthorizationFollowUps", new { insurerid = ViewBag.InsurerId, authorizationid = Model.AuthorizationRequestId })
        </p>
    }
}
