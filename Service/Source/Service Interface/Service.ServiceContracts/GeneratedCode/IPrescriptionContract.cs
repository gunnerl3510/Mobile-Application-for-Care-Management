//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Net.Security;
using WCF = global::System.ServiceModel;

namespace Service.ServiceContracts
{
	/// <summary>
	/// Service Contract Class - PrescriptionContract
	/// </summary>
	[WCF::ServiceContract(Namespace = "http://CareManagement.Model/2012/Prescription", Name = "PrescriptionContract", SessionMode = WCF::SessionMode.Allowed, ProtectionLevel = ProtectionLevel.None )]
	public partial interface IPrescriptionContract 
	{
		[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "AddMedication", ReplyAction = "addmedication", ProtectionLevel = ProtectionLevel.None)]
		void AddMedication(Service.MessageContracts.MedicationRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "DeleteMedication", ReplyAction = "deletemedication", ProtectionLevel = ProtectionLevel.None)]
		void DeleteMedication(Service.MessageContracts.MedicationRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "UpdateMedication", ReplyAction = "updatemedication", ProtectionLevel = ProtectionLevel.None)]
		void UpdateMedication(Service.MessageContracts.MedicationRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetMedication", ReplyAction = "getmedication", ProtectionLevel = ProtectionLevel.None)]
		Service.MessageContracts.MedicationMessage GetMedication(Service.MessageContracts.MedicationIdRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetMedicationsByAccount", ReplyAction = "getmedicationsbyaccount", ProtectionLevel = ProtectionLevel.None)]
		Service.MessageContracts.MedicationsMessage GetMedicationsByAccount(Service.MessageContracts.AccountIdPrescriptionRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "AddPrescriptionPickup", ReplyAction = "addprescriptionpickup", ProtectionLevel = ProtectionLevel.None)]
		void AddPrescriptionPickup(Service.MessageContracts.PrescriptionPickupRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "DeletePrescriptionPickup", ReplyAction = "deleteprescriptionpickup", ProtectionLevel = ProtectionLevel.None)]
		void DeletePrescriptionPickup(Service.MessageContracts.PrescriptionPickupRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "UpdatePrescriptionPickup", ReplyAction = "updateprescriptionpickup", ProtectionLevel = ProtectionLevel.None)]
		void UpdatePrescriptionPickup(Service.MessageContracts.PrescriptionPickupRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetPrescriptionPickup", ReplyAction = "getprescriptionpickup", ProtectionLevel = ProtectionLevel.None)]
		Service.MessageContracts.PrescriptionPickupMessage GetPrescriptionPickup(Service.MessageContracts.PrescriptionPickupIdMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetPrescriptionPickupsByMedication", ReplyAction = "getprescriptionpickupsbymedication", ProtectionLevel = ProtectionLevel.None)]
		Service.MessageContracts.PrescriptionPickupsMessage GetPrescriptionPickupsByMedication(Service.MessageContracts.MedicationIdRequestMessage request);
		
[WCF::OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, Action = "GetPrescriptionPickupsByAccount", ReplyAction = "getprescriptionpickupsbyaccount", ProtectionLevel = ProtectionLevel.None)]
		Service.MessageContracts.PrescriptionPickupsMessage GetPrescriptionPickupsByAccount(Service.MessageContracts.AccountIdPrescriptionRequestMessage request);
		
	}
}

