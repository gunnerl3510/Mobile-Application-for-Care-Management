//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service.Client.InsuranceServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Insurer", Namespace="http://schemas.datacontract.org/2004/07/Infrastructure.Model.Insurance")]
    [System.SerializableAttribute()]
    public partial class Insurer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationFollowUp", Namespace="http://schemas.datacontract.org/2004/07/Infrastructure.Model.Insurance")]
    [System.SerializableAttribute()]
    public partial class AuthorizationFollowUp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset AppointmentDateTimeUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorizationRequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset AppointmentDateTimeUtc {
            get {
                return this.AppointmentDateTimeUtcField;
            }
            set {
                if ((this.AppointmentDateTimeUtcField.Equals(value) != true)) {
                    this.AppointmentDateTimeUtcField = value;
                    this.RaisePropertyChanged("AppointmentDateTimeUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorizationRequestId {
            get {
                return this.AuthorizationRequestIdField;
            }
            set {
                if ((this.AuthorizationRequestIdField.Equals(value) != true)) {
                    this.AuthorizationRequestIdField = value;
                    this.RaisePropertyChanged("AuthorizationRequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationRequest", Namespace="http://schemas.datacontract.org/2004/07/Infrastructure.Model.Insurance")]
    [System.SerializableAttribute()]
    public partial class AuthorizationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsurerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsurerId {
            get {
                return this.InsurerIdField;
            }
            set {
                if ((this.InsurerIdField.Equals(value) != true)) {
                    this.InsurerIdField = value;
                    this.RaisePropertyChanged("InsurerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationNote", Namespace="http://schemas.datacontract.org/2004/07/Infrastructure.Model.Insurance")]
    [System.SerializableAttribute()]
    public partial class AuthorizationNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorizationRequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorizationRequestId {
            get {
                return this.AuthorizationRequestIdField;
            }
            set {
                if ((this.AuthorizationRequestIdField.Equals(value) != true)) {
                    this.AuthorizationRequestIdField = value;
                    this.RaisePropertyChanged("AuthorizationRequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://CareManagement.Model/2012/Insurance", ConfigurationName="InsuranceServiceReference.InsuranceContract")]
    public interface InsuranceContract {
        
        // CODEGEN: Generating message contract since the operation AddInsurer is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/AddInsurer", ReplyAction="addinsurer")]
        Service.Client.InsuranceServiceReference.AddInsurerResponse AddInsurer(Service.Client.InsuranceServiceReference.InsurerMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteInsurer is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/DeleteInsurer", ReplyAction="deleteinsurer")]
        Service.Client.InsuranceServiceReference.DeleteInsurerResponse DeleteInsurer(Service.Client.InsuranceServiceReference.InsurerMessage request);
        
        // CODEGEN: Generating message contract since the operation GetInsurer is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/GetInsurer", ReplyAction="getinsurer")]
        Service.Client.InsuranceServiceReference.InsurerMessage GetInsurer(Service.Client.InsuranceServiceReference.InsurerIdMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateInsurer is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/UpdateInsurer", ReplyAction="updateinsurer")]
        Service.Client.InsuranceServiceReference.UpdateInsurerResponse UpdateInsurer(Service.Client.InsuranceServiceReference.InsurerMessage request);
        
        // CODEGEN: Generating message contract since the operation GetInsurersByAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/GetInsurersByAccount" +
            "", ReplyAction="getinsurersbyaccount")]
        Service.Client.InsuranceServiceReference.InsurersMessage GetInsurersByAccount(Service.Client.InsuranceServiceReference.AccountIdMessage request);
        
        // CODEGEN: Generating message contract since the operation AddAuthorizationFollowUp is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/AddAuthorizationFoll" +
            "owUp", ReplyAction="addauthorizationfollowup")]
        Service.Client.InsuranceServiceReference.AddAuthorizationFollowUpResponse AddAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteAuthorizationFollowUp is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/DeleteAuthorizationF" +
            "ollowUp", ReplyAction="deleteauthorizationfollowup")]
        Service.Client.InsuranceServiceReference.DeleteAuthorizationFollowUpResponse DeleteAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateAuthorizationFollowUp is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/UpdateAuthorizationF" +
            "ollowUp", ReplyAction="updateauthorizationfollowup")]
        Service.Client.InsuranceServiceReference.UpdateAuthorizationFollowUpResponse UpdateAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationFollowUpsByAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/GetAuthorizationFoll" +
            "owUpsByAccount", ReplyAction="getauthorizationfollowupbyaccount")]
        Service.Client.InsuranceServiceReference.AuthorizationFollowUpsMessage GetAuthorizationFollowUpsByAccount(Service.Client.InsuranceServiceReference.AccountIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationFollowUpsByAuthorizationRequest is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/GetAuthorizationFoll" +
            "owUpsByAuthorizationRequest", ReplyAction="getauthorizationfollowupsbyauthorization")]
        Service.Client.InsuranceServiceReference.AuthorizationFollowUpsMessage GetAuthorizationFollowUpsByAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationFollowUp is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://CareManagement.Model/2012/Insurance/InsuranceContract/GetAuthorizationFoll" +
            "owUp", ReplyAction="getauthorizationfollowup")]
        Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage GetAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUpIdMessage request);
        
        // CODEGEN: Generating message contract since the operation AddAuthorizationRequest is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="AddAuthorizationRequest", ReplyAction="addauthorizationrequest")]
        Service.Client.InsuranceServiceReference.AddAuthorizationRequestResponse AddAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteAuthorizationRequest is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAuthorizationRequest", ReplyAction="deleteauthorizationrequest")]
        Service.Client.InsuranceServiceReference.DeleteAuthorizationRequestResponse DeleteAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateAuthorizationRequest is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAuthorizationRequest", ReplyAction="updateauthorizationrequest")]
        Service.Client.InsuranceServiceReference.UpdateAuthorizationRequestResponse UpdateAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationRequest is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAuthorizationRequest", ReplyAction="getauthorizationrequest")]
        Service.Client.InsuranceServiceReference.AuthorizationRequestMessage GetAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationRequestsByAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAuthorizationRequestsByAccount", ReplyAction="getauthorizationrequestsbyaccount")]
        Service.Client.InsuranceServiceReference.AuthorizationRequestsMessage GetAuthorizationRequestsByAccount(Service.Client.InsuranceServiceReference.AccountIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationRequestsByInsurer is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAuthorizationRequestsByInsurer", ReplyAction="getauthorizationrequestsbyinsurer")]
        Service.Client.InsuranceServiceReference.AuthorizationRequestsMessage GetAuthorizationRequestsByInsurer(Service.Client.InsuranceServiceReference.InsurerIdMessage request);
        
        // CODEGEN: Generating message contract since the operation AddAuthorizationNote is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="AddAuthorizationNote", ReplyAction="addauthorizationnote")]
        Service.Client.InsuranceServiceReference.AddAuthorizationNoteResponse AddAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNoteMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteAuthorizationNote is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAuthorizationNote", ReplyAction="deleteauthorizationnote")]
        Service.Client.InsuranceServiceReference.DeleteAuthorizationNoteResponse DeleteAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNoteMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateAuthorizationNote is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAuthorizationNote", ReplyAction="updateauthorizationnote")]
        Service.Client.InsuranceServiceReference.UpdateAuthorizationNoteResponse UpdateAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNoteMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationNote is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAuthorizationNote", ReplyAction="getauthorizationnote")]
        Service.Client.InsuranceServiceReference.AuthorizationNoteMessage GetAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNoteIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationNotesByAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAuthorizationNotesByAccount", ReplyAction="getauthorizationnotesbyaccount")]
        Service.Client.InsuranceServiceReference.AuthorizationNotesMessage GetAuthorizationNotesByAccount(Service.Client.InsuranceServiceReference.AccountIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAuthorizationNotesByAuthorizationRequest is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAuthorizationNotesByAuthorizationRequest", ReplyAction="getauthorizationnotesbyauthorizationrequest")]
        Service.Client.InsuranceServiceReference.AuthorizationNotesMessage GetAuthorizationNotesByAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsurerMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public Service.Client.InsuranceServiceReference.Insurer Insurer;
        
        public InsurerMessage() {
        }
        
        public InsurerMessage(Service.Client.InsuranceServiceReference.Insurer Insurer) {
            this.Insurer = Insurer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddInsurerResponse {
        
        public AddInsurerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteInsurerResponse {
        
        public DeleteInsurerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsurerIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public int InsurerId;
        
        public InsurerIdMessage() {
        }
        
        public InsurerIdMessage(int InsurerId) {
            this.InsurerId = InsurerId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateInsurerResponse {
        
        public UpdateInsurerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AccountIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public int AccountId;
        
        public AccountIdMessage() {
        }
        
        public AccountIdMessage(int AccountId) {
            this.AccountId = AccountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsurersMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public Service.Client.InsuranceServiceReference.Insurer[] Insurers;
        
        public InsurersMessage() {
        }
        
        public InsurersMessage(Service.Client.InsuranceServiceReference.Insurer[] Insurers) {
            this.Insurers = Insurers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationFollowUpMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public Service.Client.InsuranceServiceReference.AuthorizationFollowUp AuthorizationFollowUp;
        
        public AuthorizationFollowUpMessage() {
        }
        
        public AuthorizationFollowUpMessage(Service.Client.InsuranceServiceReference.AuthorizationFollowUp AuthorizationFollowUp) {
            this.AuthorizationFollowUp = AuthorizationFollowUp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAuthorizationFollowUpResponse {
        
        public AddAuthorizationFollowUpResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAuthorizationFollowUpResponse {
        
        public DeleteAuthorizationFollowUpResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAuthorizationFollowUpResponse {
        
        public UpdateAuthorizationFollowUpResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationFollowUpsMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public Service.Client.InsuranceServiceReference.AuthorizationFollowUp[] AuthorizationFollowUps;
        
        public AuthorizationFollowUpsMessage() {
        }
        
        public AuthorizationFollowUpsMessage(Service.Client.InsuranceServiceReference.AuthorizationFollowUp[] AuthorizationFollowUps) {
            this.AuthorizationFollowUps = AuthorizationFollowUps;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationRequestIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public int AuthorizationRequestId;
        
        public AuthorizationRequestIdMessage() {
        }
        
        public AuthorizationRequestIdMessage(int AuthorizationRequestId) {
            this.AuthorizationRequestId = AuthorizationRequestId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationFollowUpIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public int AuthorizationFollowUpId;
        
        public AuthorizationFollowUpIdMessage() {
        }
        
        public AuthorizationFollowUpIdMessage(int AuthorizationFollowUpId) {
            this.AuthorizationFollowUpId = AuthorizationFollowUpId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationRequestMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public Service.Client.InsuranceServiceReference.AuthorizationRequest AuthorizationRequest;
        
        public AuthorizationRequestMessage() {
        }
        
        public AuthorizationRequestMessage(Service.Client.InsuranceServiceReference.AuthorizationRequest AuthorizationRequest) {
            this.AuthorizationRequest = AuthorizationRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAuthorizationRequestResponse {
        
        public AddAuthorizationRequestResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAuthorizationRequestResponse {
        
        public DeleteAuthorizationRequestResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAuthorizationRequestResponse {
        
        public UpdateAuthorizationRequestResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationRequestsMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public Service.Client.InsuranceServiceReference.AuthorizationRequest[] AuthorizationRequests;
        
        public AuthorizationRequestsMessage() {
        }
        
        public AuthorizationRequestsMessage(Service.Client.InsuranceServiceReference.AuthorizationRequest[] AuthorizationRequests) {
            this.AuthorizationRequests = AuthorizationRequests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationNoteMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public Service.Client.InsuranceServiceReference.AuthorizationNote AuthorizationNote;
        
        public AuthorizationNoteMessage() {
        }
        
        public AuthorizationNoteMessage(Service.Client.InsuranceServiceReference.AuthorizationNote AuthorizationNote) {
            this.AuthorizationNote = AuthorizationNote;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAuthorizationNoteResponse {
        
        public AddAuthorizationNoteResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAuthorizationNoteResponse {
        
        public DeleteAuthorizationNoteResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAuthorizationNoteResponse {
        
        public UpdateAuthorizationNoteResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationNoteIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public int AuthorizationNoteId;
        
        public AuthorizationNoteIdMessage() {
        }
        
        public AuthorizationNoteIdMessage(int AuthorizationNoteId) {
            this.AuthorizationNoteId = AuthorizationNoteId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AuthorizationNotesMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public Service.Client.InsuranceServiceReference.AuthorizationNote[] AuthorizationNotes;
        
        public AuthorizationNotesMessage() {
        }
        
        public AuthorizationNotesMessage(Service.Client.InsuranceServiceReference.AuthorizationNote[] AuthorizationNotes) {
            this.AuthorizationNotes = AuthorizationNotes;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InsuranceContractChannel : Service.Client.InsuranceServiceReference.InsuranceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsuranceContractClient : System.ServiceModel.ClientBase<Service.Client.InsuranceServiceReference.InsuranceContract>, Service.Client.InsuranceServiceReference.InsuranceContract {
        
        public InsuranceContractClient() {
        }
        
        public InsuranceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InsuranceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsuranceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsuranceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AddInsurerResponse Service.Client.InsuranceServiceReference.InsuranceContract.AddInsurer(Service.Client.InsuranceServiceReference.InsurerMessage request) {
            return base.Channel.AddInsurer(request);
        }
        
        public void AddInsurer(Service.Client.InsuranceServiceReference.Insurer Insurer) {
            Service.Client.InsuranceServiceReference.InsurerMessage inValue = new Service.Client.InsuranceServiceReference.InsurerMessage();
            inValue.Insurer = Insurer;
            Service.Client.InsuranceServiceReference.AddInsurerResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).AddInsurer(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.DeleteInsurerResponse Service.Client.InsuranceServiceReference.InsuranceContract.DeleteInsurer(Service.Client.InsuranceServiceReference.InsurerMessage request) {
            return base.Channel.DeleteInsurer(request);
        }
        
        public void DeleteInsurer(Service.Client.InsuranceServiceReference.Insurer Insurer) {
            Service.Client.InsuranceServiceReference.InsurerMessage inValue = new Service.Client.InsuranceServiceReference.InsurerMessage();
            inValue.Insurer = Insurer;
            Service.Client.InsuranceServiceReference.DeleteInsurerResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).DeleteInsurer(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.InsurerMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetInsurer(Service.Client.InsuranceServiceReference.InsurerIdMessage request) {
            return base.Channel.GetInsurer(request);
        }
        
        public Service.Client.InsuranceServiceReference.Insurer GetInsurer(int InsurerId) {
            Service.Client.InsuranceServiceReference.InsurerIdMessage inValue = new Service.Client.InsuranceServiceReference.InsurerIdMessage();
            inValue.InsurerId = InsurerId;
            Service.Client.InsuranceServiceReference.InsurerMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetInsurer(inValue);
            return retVal.Insurer;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.UpdateInsurerResponse Service.Client.InsuranceServiceReference.InsuranceContract.UpdateInsurer(Service.Client.InsuranceServiceReference.InsurerMessage request) {
            return base.Channel.UpdateInsurer(request);
        }
        
        public void UpdateInsurer(Service.Client.InsuranceServiceReference.Insurer Insurer) {
            Service.Client.InsuranceServiceReference.InsurerMessage inValue = new Service.Client.InsuranceServiceReference.InsurerMessage();
            inValue.Insurer = Insurer;
            Service.Client.InsuranceServiceReference.UpdateInsurerResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).UpdateInsurer(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.InsurersMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetInsurersByAccount(Service.Client.InsuranceServiceReference.AccountIdMessage request) {
            return base.Channel.GetInsurersByAccount(request);
        }
        
        public Service.Client.InsuranceServiceReference.Insurer[] GetInsurersByAccount(int AccountId) {
            Service.Client.InsuranceServiceReference.AccountIdMessage inValue = new Service.Client.InsuranceServiceReference.AccountIdMessage();
            inValue.AccountId = AccountId;
            Service.Client.InsuranceServiceReference.InsurersMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetInsurersByAccount(inValue);
            return retVal.Insurers;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AddAuthorizationFollowUpResponse Service.Client.InsuranceServiceReference.InsuranceContract.AddAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage request) {
            return base.Channel.AddAuthorizationFollowUp(request);
        }
        
        public void AddAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUp AuthorizationFollowUp) {
            Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage();
            inValue.AuthorizationFollowUp = AuthorizationFollowUp;
            Service.Client.InsuranceServiceReference.AddAuthorizationFollowUpResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).AddAuthorizationFollowUp(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.DeleteAuthorizationFollowUpResponse Service.Client.InsuranceServiceReference.InsuranceContract.DeleteAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage request) {
            return base.Channel.DeleteAuthorizationFollowUp(request);
        }
        
        public void DeleteAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUp AuthorizationFollowUp) {
            Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage();
            inValue.AuthorizationFollowUp = AuthorizationFollowUp;
            Service.Client.InsuranceServiceReference.DeleteAuthorizationFollowUpResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).DeleteAuthorizationFollowUp(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.UpdateAuthorizationFollowUpResponse Service.Client.InsuranceServiceReference.InsuranceContract.UpdateAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage request) {
            return base.Channel.UpdateAuthorizationFollowUp(request);
        }
        
        public void UpdateAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUp AuthorizationFollowUp) {
            Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage();
            inValue.AuthorizationFollowUp = AuthorizationFollowUp;
            Service.Client.InsuranceServiceReference.UpdateAuthorizationFollowUpResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).UpdateAuthorizationFollowUp(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationFollowUpsMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationFollowUpsByAccount(Service.Client.InsuranceServiceReference.AccountIdMessage request) {
            return base.Channel.GetAuthorizationFollowUpsByAccount(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationFollowUp[] GetAuthorizationFollowUpsByAccount(int AccountId) {
            Service.Client.InsuranceServiceReference.AccountIdMessage inValue = new Service.Client.InsuranceServiceReference.AccountIdMessage();
            inValue.AccountId = AccountId;
            Service.Client.InsuranceServiceReference.AuthorizationFollowUpsMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationFollowUpsByAccount(inValue);
            return retVal.AuthorizationFollowUps;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationFollowUpsMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationFollowUpsByAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage request) {
            return base.Channel.GetAuthorizationFollowUpsByAuthorizationRequest(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationFollowUp[] GetAuthorizationFollowUpsByAuthorizationRequest(int AuthorizationRequestId) {
            Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage();
            inValue.AuthorizationRequestId = AuthorizationRequestId;
            Service.Client.InsuranceServiceReference.AuthorizationFollowUpsMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationFollowUpsByAuthorizationRequest(inValue);
            return retVal.AuthorizationFollowUps;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationFollowUp(Service.Client.InsuranceServiceReference.AuthorizationFollowUpIdMessage request) {
            return base.Channel.GetAuthorizationFollowUp(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationFollowUp GetAuthorizationFollowUp(int AuthorizationFollowUpId) {
            Service.Client.InsuranceServiceReference.AuthorizationFollowUpIdMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationFollowUpIdMessage();
            inValue.AuthorizationFollowUpId = AuthorizationFollowUpId;
            Service.Client.InsuranceServiceReference.AuthorizationFollowUpMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationFollowUp(inValue);
            return retVal.AuthorizationFollowUp;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AddAuthorizationRequestResponse Service.Client.InsuranceServiceReference.InsuranceContract.AddAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestMessage request) {
            return base.Channel.AddAuthorizationRequest(request);
        }
        
        public void AddAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequest AuthorizationRequest) {
            Service.Client.InsuranceServiceReference.AuthorizationRequestMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationRequestMessage();
            inValue.AuthorizationRequest = AuthorizationRequest;
            Service.Client.InsuranceServiceReference.AddAuthorizationRequestResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).AddAuthorizationRequest(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.DeleteAuthorizationRequestResponse Service.Client.InsuranceServiceReference.InsuranceContract.DeleteAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestMessage request) {
            return base.Channel.DeleteAuthorizationRequest(request);
        }
        
        public void DeleteAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequest AuthorizationRequest) {
            Service.Client.InsuranceServiceReference.AuthorizationRequestMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationRequestMessage();
            inValue.AuthorizationRequest = AuthorizationRequest;
            Service.Client.InsuranceServiceReference.DeleteAuthorizationRequestResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).DeleteAuthorizationRequest(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.UpdateAuthorizationRequestResponse Service.Client.InsuranceServiceReference.InsuranceContract.UpdateAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestMessage request) {
            return base.Channel.UpdateAuthorizationRequest(request);
        }
        
        public void UpdateAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequest AuthorizationRequest) {
            Service.Client.InsuranceServiceReference.AuthorizationRequestMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationRequestMessage();
            inValue.AuthorizationRequest = AuthorizationRequest;
            Service.Client.InsuranceServiceReference.UpdateAuthorizationRequestResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).UpdateAuthorizationRequest(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationRequestMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage request) {
            return base.Channel.GetAuthorizationRequest(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationRequest GetAuthorizationRequest(int AuthorizationRequestId) {
            Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage();
            inValue.AuthorizationRequestId = AuthorizationRequestId;
            Service.Client.InsuranceServiceReference.AuthorizationRequestMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationRequest(inValue);
            return retVal.AuthorizationRequest;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationRequestsMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationRequestsByAccount(Service.Client.InsuranceServiceReference.AccountIdMessage request) {
            return base.Channel.GetAuthorizationRequestsByAccount(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationRequest[] GetAuthorizationRequestsByAccount(int AccountId) {
            Service.Client.InsuranceServiceReference.AccountIdMessage inValue = new Service.Client.InsuranceServiceReference.AccountIdMessage();
            inValue.AccountId = AccountId;
            Service.Client.InsuranceServiceReference.AuthorizationRequestsMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationRequestsByAccount(inValue);
            return retVal.AuthorizationRequests;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationRequestsMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationRequestsByInsurer(Service.Client.InsuranceServiceReference.InsurerIdMessage request) {
            return base.Channel.GetAuthorizationRequestsByInsurer(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationRequest[] GetAuthorizationRequestsByInsurer(int InsurerId) {
            Service.Client.InsuranceServiceReference.InsurerIdMessage inValue = new Service.Client.InsuranceServiceReference.InsurerIdMessage();
            inValue.InsurerId = InsurerId;
            Service.Client.InsuranceServiceReference.AuthorizationRequestsMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationRequestsByInsurer(inValue);
            return retVal.AuthorizationRequests;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AddAuthorizationNoteResponse Service.Client.InsuranceServiceReference.InsuranceContract.AddAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNoteMessage request) {
            return base.Channel.AddAuthorizationNote(request);
        }
        
        public void AddAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNote AuthorizationNote) {
            Service.Client.InsuranceServiceReference.AuthorizationNoteMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationNoteMessage();
            inValue.AuthorizationNote = AuthorizationNote;
            Service.Client.InsuranceServiceReference.AddAuthorizationNoteResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).AddAuthorizationNote(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.DeleteAuthorizationNoteResponse Service.Client.InsuranceServiceReference.InsuranceContract.DeleteAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNoteMessage request) {
            return base.Channel.DeleteAuthorizationNote(request);
        }
        
        public void DeleteAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNote AuthorizationNote) {
            Service.Client.InsuranceServiceReference.AuthorizationNoteMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationNoteMessage();
            inValue.AuthorizationNote = AuthorizationNote;
            Service.Client.InsuranceServiceReference.DeleteAuthorizationNoteResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).DeleteAuthorizationNote(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.UpdateAuthorizationNoteResponse Service.Client.InsuranceServiceReference.InsuranceContract.UpdateAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNoteMessage request) {
            return base.Channel.UpdateAuthorizationNote(request);
        }
        
        public void UpdateAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNote AuthorizationNote) {
            Service.Client.InsuranceServiceReference.AuthorizationNoteMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationNoteMessage();
            inValue.AuthorizationNote = AuthorizationNote;
            Service.Client.InsuranceServiceReference.UpdateAuthorizationNoteResponse retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).UpdateAuthorizationNote(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationNoteMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationNote(Service.Client.InsuranceServiceReference.AuthorizationNoteIdMessage request) {
            return base.Channel.GetAuthorizationNote(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationNote GetAuthorizationNote(int AuthorizationNoteId) {
            Service.Client.InsuranceServiceReference.AuthorizationNoteIdMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationNoteIdMessage();
            inValue.AuthorizationNoteId = AuthorizationNoteId;
            Service.Client.InsuranceServiceReference.AuthorizationNoteMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationNote(inValue);
            return retVal.AuthorizationNote;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationNotesMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationNotesByAccount(Service.Client.InsuranceServiceReference.AccountIdMessage request) {
            return base.Channel.GetAuthorizationNotesByAccount(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationNote[] GetAuthorizationNotesByAccount(int AccountId) {
            Service.Client.InsuranceServiceReference.AccountIdMessage inValue = new Service.Client.InsuranceServiceReference.AccountIdMessage();
            inValue.AccountId = AccountId;
            Service.Client.InsuranceServiceReference.AuthorizationNotesMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationNotesByAccount(inValue);
            return retVal.AuthorizationNotes;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.InsuranceServiceReference.AuthorizationNotesMessage Service.Client.InsuranceServiceReference.InsuranceContract.GetAuthorizationNotesByAuthorizationRequest(Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage request) {
            return base.Channel.GetAuthorizationNotesByAuthorizationRequest(request);
        }
        
        public Service.Client.InsuranceServiceReference.AuthorizationNote[] GetAuthorizationNotesByAuthorizationRequest(int AuthorizationRequestId) {
            Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage inValue = new Service.Client.InsuranceServiceReference.AuthorizationRequestIdMessage();
            inValue.AuthorizationRequestId = AuthorizationRequestId;
            Service.Client.InsuranceServiceReference.AuthorizationNotesMessage retVal = ((Service.Client.InsuranceServiceReference.InsuranceContract)(this)).GetAuthorizationNotesByAuthorizationRequest(inValue);
            return retVal.AuthorizationNotes;
        }
    }
}
