//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service.Client.PrescriptionServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medication", Namespace="http://schemas.datacontract.org/2004/07/Infrastructure.Model.Prescription")]
    [System.SerializableAttribute()]
    public partial class Medication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Service.Client.PrescriptionServiceReference.DosageUnits> DosageUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Service.Client.PrescriptionServiceReference.DosageUnits> DosageUnits {
            get {
                return this.DosageUnitsField;
            }
            set {
                if ((this.DosageUnitsField.Equals(value) != true)) {
                    this.DosageUnitsField = value;
                    this.RaisePropertyChanged("DosageUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DosageUnits", Namespace="http://schemas.datacontract.org/2004/07/Infrastructure.Model.Prescription")]
    public enum DosageUnits : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tablet = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Milliliter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Milligram = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Teaspoon = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tablespoon = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrescriptionPickup", Namespace="http://schemas.datacontract.org/2004/07/Infrastructure.Model.Prescription")]
    [System.SerializableAttribute()]
    public partial class PrescriptionPickup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset AppointmentDateTimeUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset AppointmentDateTimeUtc {
            get {
                return this.AppointmentDateTimeUtcField;
            }
            set {
                if ((this.AppointmentDateTimeUtcField.Equals(value) != true)) {
                    this.AppointmentDateTimeUtcField = value;
                    this.RaisePropertyChanged("AppointmentDateTimeUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicationId {
            get {
                return this.MedicationIdField;
            }
            set {
                if ((this.MedicationIdField.Equals(value) != true)) {
                    this.MedicationIdField = value;
                    this.RaisePropertyChanged("MedicationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://CareManagement.Model/2012/Prescription", ConfigurationName="PrescriptionServiceReference.PrescriptionContract")]
    public interface PrescriptionContract {
        
        // CODEGEN: Generating message contract since the operation AddMedication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="AddMedication", ReplyAction="addmedication")]
        Service.Client.PrescriptionServiceReference.AddMedicationResponse AddMedication(Service.Client.PrescriptionServiceReference.MedicationMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteMedication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteMedication", ReplyAction="deletemedication")]
        Service.Client.PrescriptionServiceReference.DeleteMedicationResponse DeleteMedication(Service.Client.PrescriptionServiceReference.MedicationMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateMedication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateMedication", ReplyAction="updatemedication")]
        Service.Client.PrescriptionServiceReference.UpdateMedicationResponse UpdateMedication(Service.Client.PrescriptionServiceReference.MedicationMessage request);
        
        // CODEGEN: Generating message contract since the operation GetMedication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetMedication", ReplyAction="getmedication")]
        Service.Client.PrescriptionServiceReference.MedicationMessage GetMedication(Service.Client.PrescriptionServiceReference.MedicationIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetMedicationsByAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetMedicationsByAccount", ReplyAction="getmedicationsbyaccount")]
        Service.Client.PrescriptionServiceReference.MedicationsMessage GetMedicationsByAccount(Service.Client.PrescriptionServiceReference.AccountIdMessage request);
        
        // CODEGEN: Generating message contract since the operation AddPrescriptionPickup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="AddPrescriptionPickup", ReplyAction="addprescriptionpickup")]
        Service.Client.PrescriptionServiceReference.AddPrescriptionPickupResponse AddPrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage request);
        
        // CODEGEN: Generating message contract since the operation DeletePrescriptionPickup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeletePrescriptionPickup", ReplyAction="deleteprescriptionpickup")]
        Service.Client.PrescriptionServiceReference.DeletePrescriptionPickupResponse DeletePrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdatePrescriptionPickup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdatePrescriptionPickup", ReplyAction="updateprescriptionpickup")]
        Service.Client.PrescriptionServiceReference.UpdatePrescriptionPickupResponse UpdatePrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage request);
        
        // CODEGEN: Generating message contract since the operation GetPrescriptionPickup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetPrescriptionPickup", ReplyAction="getprescriptionpickup")]
        Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage GetPrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickupIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetPrescriptionPickupsByMedication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetPrescriptionPickupsByMedication", ReplyAction="getprescriptionpickupsbymedication")]
        Service.Client.PrescriptionServiceReference.PrescriptionPickupsMessage GetPrescriptionPickupsByMedication(Service.Client.PrescriptionServiceReference.MedicationIdMessage request);
        
        // CODEGEN: Generating message contract since the operation GetPrescriptionPickupsByAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetPrescriptionPickupsByAccount", ReplyAction="getprescriptionpickupsbyaccount")]
        Service.Client.PrescriptionServiceReference.PrescriptionPickupsMessage GetPrescriptionPickupsByAccount(Service.Client.PrescriptionServiceReference.AccountIdMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MedicationMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Prescription", Order=0)]
        public Service.Client.PrescriptionServiceReference.Medication Medication;
        
        public MedicationMessage() {
        }
        
        public MedicationMessage(Service.Client.PrescriptionServiceReference.Medication Medication) {
            this.Medication = Medication;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddMedicationResponse {
        
        public AddMedicationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteMedicationResponse {
        
        public DeleteMedicationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateMedicationResponse {
        
        public UpdateMedicationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MedicationIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Prescription", Order=0)]
        public int MedicationId;
        
        public MedicationIdMessage() {
        }
        
        public MedicationIdMessage(int MedicationId) {
            this.MedicationId = MedicationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AccountIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public int AccountId;
        
        public AccountIdMessage() {
        }
        
        public AccountIdMessage(int AccountId) {
            this.AccountId = AccountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MedicationsMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Prescription", Order=0)]
        public Service.Client.PrescriptionServiceReference.Medication[] Medications;
        
        public MedicationsMessage() {
        }
        
        public MedicationsMessage(Service.Client.PrescriptionServiceReference.Medication[] Medications) {
            this.Medications = Medications;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PrescriptionPickupMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Prescription", Order=0)]
        public Service.Client.PrescriptionServiceReference.PrescriptionPickup PrescriptionPickup;
        
        public PrescriptionPickupMessage() {
        }
        
        public PrescriptionPickupMessage(Service.Client.PrescriptionServiceReference.PrescriptionPickup PrescriptionPickup) {
            this.PrescriptionPickup = PrescriptionPickup;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPrescriptionPickupResponse {
        
        public AddPrescriptionPickupResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeletePrescriptionPickupResponse {
        
        public DeletePrescriptionPickupResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdatePrescriptionPickupResponse {
        
        public UpdatePrescriptionPickupResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PrescriptionPickupIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Prescription", Order=0)]
        public int PrescriptionPickupId;
        
        public PrescriptionPickupIdMessage() {
        }
        
        public PrescriptionPickupIdMessage(int PrescriptionPickupId) {
            this.PrescriptionPickupId = PrescriptionPickupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PrescriptionPickupsMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Prescription", Order=0)]
        public Service.Client.PrescriptionServiceReference.PrescriptionPickup[] PrescriptionPickups;
        
        public PrescriptionPickupsMessage() {
        }
        
        public PrescriptionPickupsMessage(Service.Client.PrescriptionServiceReference.PrescriptionPickup[] PrescriptionPickups) {
            this.PrescriptionPickups = PrescriptionPickups;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PrescriptionContractChannel : Service.Client.PrescriptionServiceReference.PrescriptionContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrescriptionContractClient : System.ServiceModel.ClientBase<Service.Client.PrescriptionServiceReference.PrescriptionContract>, Service.Client.PrescriptionServiceReference.PrescriptionContract {
        
        public PrescriptionContractClient() {
        }
        
        public PrescriptionContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrescriptionContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrescriptionContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrescriptionContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.AddMedicationResponse Service.Client.PrescriptionServiceReference.PrescriptionContract.AddMedication(Service.Client.PrescriptionServiceReference.MedicationMessage request) {
            return base.Channel.AddMedication(request);
        }
        
        public void AddMedication(Service.Client.PrescriptionServiceReference.Medication Medication) {
            Service.Client.PrescriptionServiceReference.MedicationMessage inValue = new Service.Client.PrescriptionServiceReference.MedicationMessage();
            inValue.Medication = Medication;
            Service.Client.PrescriptionServiceReference.AddMedicationResponse retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).AddMedication(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.DeleteMedicationResponse Service.Client.PrescriptionServiceReference.PrescriptionContract.DeleteMedication(Service.Client.PrescriptionServiceReference.MedicationMessage request) {
            return base.Channel.DeleteMedication(request);
        }
        
        public void DeleteMedication(Service.Client.PrescriptionServiceReference.Medication Medication) {
            Service.Client.PrescriptionServiceReference.MedicationMessage inValue = new Service.Client.PrescriptionServiceReference.MedicationMessage();
            inValue.Medication = Medication;
            Service.Client.PrescriptionServiceReference.DeleteMedicationResponse retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).DeleteMedication(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.UpdateMedicationResponse Service.Client.PrescriptionServiceReference.PrescriptionContract.UpdateMedication(Service.Client.PrescriptionServiceReference.MedicationMessage request) {
            return base.Channel.UpdateMedication(request);
        }
        
        public void UpdateMedication(Service.Client.PrescriptionServiceReference.Medication Medication) {
            Service.Client.PrescriptionServiceReference.MedicationMessage inValue = new Service.Client.PrescriptionServiceReference.MedicationMessage();
            inValue.Medication = Medication;
            Service.Client.PrescriptionServiceReference.UpdateMedicationResponse retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).UpdateMedication(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.MedicationMessage Service.Client.PrescriptionServiceReference.PrescriptionContract.GetMedication(Service.Client.PrescriptionServiceReference.MedicationIdMessage request) {
            return base.Channel.GetMedication(request);
        }
        
        public Service.Client.PrescriptionServiceReference.Medication GetMedication(int MedicationId) {
            Service.Client.PrescriptionServiceReference.MedicationIdMessage inValue = new Service.Client.PrescriptionServiceReference.MedicationIdMessage();
            inValue.MedicationId = MedicationId;
            Service.Client.PrescriptionServiceReference.MedicationMessage retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).GetMedication(inValue);
            return retVal.Medication;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.MedicationsMessage Service.Client.PrescriptionServiceReference.PrescriptionContract.GetMedicationsByAccount(Service.Client.PrescriptionServiceReference.AccountIdMessage request) {
            return base.Channel.GetMedicationsByAccount(request);
        }
        
        public Service.Client.PrescriptionServiceReference.Medication[] GetMedicationsByAccount(int AccountId) {
            Service.Client.PrescriptionServiceReference.AccountIdMessage inValue = new Service.Client.PrescriptionServiceReference.AccountIdMessage();
            inValue.AccountId = AccountId;
            Service.Client.PrescriptionServiceReference.MedicationsMessage retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).GetMedicationsByAccount(inValue);
            return retVal.Medications;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.AddPrescriptionPickupResponse Service.Client.PrescriptionServiceReference.PrescriptionContract.AddPrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage request) {
            return base.Channel.AddPrescriptionPickup(request);
        }
        
        public void AddPrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickup PrescriptionPickup) {
            Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage inValue = new Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage();
            inValue.PrescriptionPickup = PrescriptionPickup;
            Service.Client.PrescriptionServiceReference.AddPrescriptionPickupResponse retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).AddPrescriptionPickup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.DeletePrescriptionPickupResponse Service.Client.PrescriptionServiceReference.PrescriptionContract.DeletePrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage request) {
            return base.Channel.DeletePrescriptionPickup(request);
        }
        
        public void DeletePrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickup PrescriptionPickup) {
            Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage inValue = new Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage();
            inValue.PrescriptionPickup = PrescriptionPickup;
            Service.Client.PrescriptionServiceReference.DeletePrescriptionPickupResponse retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).DeletePrescriptionPickup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.UpdatePrescriptionPickupResponse Service.Client.PrescriptionServiceReference.PrescriptionContract.UpdatePrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage request) {
            return base.Channel.UpdatePrescriptionPickup(request);
        }
        
        public void UpdatePrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickup PrescriptionPickup) {
            Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage inValue = new Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage();
            inValue.PrescriptionPickup = PrescriptionPickup;
            Service.Client.PrescriptionServiceReference.UpdatePrescriptionPickupResponse retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).UpdatePrescriptionPickup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage Service.Client.PrescriptionServiceReference.PrescriptionContract.GetPrescriptionPickup(Service.Client.PrescriptionServiceReference.PrescriptionPickupIdMessage request) {
            return base.Channel.GetPrescriptionPickup(request);
        }
        
        public Service.Client.PrescriptionServiceReference.PrescriptionPickup GetPrescriptionPickup(int PrescriptionPickupId) {
            Service.Client.PrescriptionServiceReference.PrescriptionPickupIdMessage inValue = new Service.Client.PrescriptionServiceReference.PrescriptionPickupIdMessage();
            inValue.PrescriptionPickupId = PrescriptionPickupId;
            Service.Client.PrescriptionServiceReference.PrescriptionPickupMessage retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).GetPrescriptionPickup(inValue);
            return retVal.PrescriptionPickup;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.PrescriptionPickupsMessage Service.Client.PrescriptionServiceReference.PrescriptionContract.GetPrescriptionPickupsByMedication(Service.Client.PrescriptionServiceReference.MedicationIdMessage request) {
            return base.Channel.GetPrescriptionPickupsByMedication(request);
        }
        
        public Service.Client.PrescriptionServiceReference.PrescriptionPickup[] GetPrescriptionPickupsByMedication(int MedicationId) {
            Service.Client.PrescriptionServiceReference.MedicationIdMessage inValue = new Service.Client.PrescriptionServiceReference.MedicationIdMessage();
            inValue.MedicationId = MedicationId;
            Service.Client.PrescriptionServiceReference.PrescriptionPickupsMessage retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).GetPrescriptionPickupsByMedication(inValue);
            return retVal.PrescriptionPickups;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.PrescriptionServiceReference.PrescriptionPickupsMessage Service.Client.PrescriptionServiceReference.PrescriptionContract.GetPrescriptionPickupsByAccount(Service.Client.PrescriptionServiceReference.AccountIdMessage request) {
            return base.Channel.GetPrescriptionPickupsByAccount(request);
        }
        
        public Service.Client.PrescriptionServiceReference.PrescriptionPickup[] GetPrescriptionPickupsByAccount(int AccountId) {
            Service.Client.PrescriptionServiceReference.AccountIdMessage inValue = new Service.Client.PrescriptionServiceReference.AccountIdMessage();
            inValue.AccountId = AccountId;
            Service.Client.PrescriptionServiceReference.PrescriptionPickupsMessage retVal = ((Service.Client.PrescriptionServiceReference.PrescriptionContract)(this)).GetPrescriptionPickupsByAccount(inValue);
            return retVal.PrescriptionPickups;
        }
    }
}
