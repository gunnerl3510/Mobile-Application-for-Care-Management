//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service.Client.AccountServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/Infrastructure.Model.Account")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://CareManagement.Model/2012/Accounts", ConfigurationName="AccountServiceReference.AccountContract")]
    public interface AccountContract {
        
        // CODEGEN: Generating message contract since the operation AddAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="AddAccount", ReplyAction="addaccount")]
        Service.Client.AccountServiceReference.AddAccountResponse AddAccount(Service.Client.AccountServiceReference.AddAccountMessage request);
        
        // CODEGEN: Generating message contract since the operation DeleteAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteAccount", ReplyAction="deleteaccount")]
        Service.Client.AccountServiceReference.DeleteAccountResponse DeleteAccount(Service.Client.AccountServiceReference.AccountMessage request);
        
        // CODEGEN: Generating message contract since the operation UpdateAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAccount", ReplyAction="updateaccount")]
        Service.Client.AccountServiceReference.UpdateAccountResponse UpdateAccount(Service.Client.AccountServiceReference.AccountMessage request);
        
        // CODEGEN: Generating message contract since the operation GetAccount is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAccount", ReplyAction="getaccount")]
        Service.Client.AccountServiceReference.AccountMessage GetAccount(Service.Client.AccountServiceReference.AccountIdMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddAccountMessage", WrapperNamespace="http://CareManagement.Model/2012/Accounts", IsWrapped=true)]
    public partial class AddAccountMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Accounts", Order=0)]
        public Service.Client.AccountServiceReference.Account Account;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Accounts", Order=1)]
        public string Password;
        
        public AddAccountMessage() {
        }
        
        public AddAccountMessage(Service.Client.AccountServiceReference.Account Account, string Password) {
            this.Account = Account;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAccountResponse {
        
        public AddAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AccountMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Accounts", Order=0)]
        public Service.Client.AccountServiceReference.Account Account;
        
        public AccountMessage() {
        }
        
        public AccountMessage(Service.Client.AccountServiceReference.Account Account) {
            this.Account = Account;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAccountResponse {
        
        public DeleteAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAccountResponse {
        
        public UpdateAccountResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AccountIdMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://CareManagement.Model/2012/Insurance", Order=0)]
        public int AccountId;
        
        public AccountIdMessage() {
        }
        
        public AccountIdMessage(int AccountId) {
            this.AccountId = AccountId;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AccountContractChannel : Service.Client.AccountServiceReference.AccountContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountContractClient : System.ServiceModel.ClientBase<Service.Client.AccountServiceReference.AccountContract>, Service.Client.AccountServiceReference.AccountContract {
        
        public AccountContractClient() {
        }
        
        public AccountContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.AccountServiceReference.AddAccountResponse Service.Client.AccountServiceReference.AccountContract.AddAccount(Service.Client.AccountServiceReference.AddAccountMessage request) {
            return base.Channel.AddAccount(request);
        }
        
        public void AddAccount(Service.Client.AccountServiceReference.Account Account, string Password) {
            Service.Client.AccountServiceReference.AddAccountMessage inValue = new Service.Client.AccountServiceReference.AddAccountMessage();
            inValue.Account = Account;
            inValue.Password = Password;
            Service.Client.AccountServiceReference.AddAccountResponse retVal = ((Service.Client.AccountServiceReference.AccountContract)(this)).AddAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.AccountServiceReference.DeleteAccountResponse Service.Client.AccountServiceReference.AccountContract.DeleteAccount(Service.Client.AccountServiceReference.AccountMessage request) {
            return base.Channel.DeleteAccount(request);
        }
        
        public void DeleteAccount(Service.Client.AccountServiceReference.Account Account) {
            Service.Client.AccountServiceReference.AccountMessage inValue = new Service.Client.AccountServiceReference.AccountMessage();
            inValue.Account = Account;
            Service.Client.AccountServiceReference.DeleteAccountResponse retVal = ((Service.Client.AccountServiceReference.AccountContract)(this)).DeleteAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.AccountServiceReference.UpdateAccountResponse Service.Client.AccountServiceReference.AccountContract.UpdateAccount(Service.Client.AccountServiceReference.AccountMessage request) {
            return base.Channel.UpdateAccount(request);
        }
        
        public void UpdateAccount(Service.Client.AccountServiceReference.Account Account) {
            Service.Client.AccountServiceReference.AccountMessage inValue = new Service.Client.AccountServiceReference.AccountMessage();
            inValue.Account = Account;
            Service.Client.AccountServiceReference.UpdateAccountResponse retVal = ((Service.Client.AccountServiceReference.AccountContract)(this)).UpdateAccount(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Service.Client.AccountServiceReference.AccountMessage Service.Client.AccountServiceReference.AccountContract.GetAccount(Service.Client.AccountServiceReference.AccountIdMessage request) {
            return base.Channel.GetAccount(request);
        }
        
        public Service.Client.AccountServiceReference.Account GetAccount(int AccountId) {
            Service.Client.AccountServiceReference.AccountIdMessage inValue = new Service.Client.AccountServiceReference.AccountIdMessage();
            inValue.AccountId = AccountId;
            Service.Client.AccountServiceReference.AccountMessage retVal = ((Service.Client.AccountServiceReference.AccountContract)(this)).GetAccount(inValue);
            return retVal.Account;
        }
    }
}
